name: Terraform Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'ap-south-1'  # Update if your region is different
      BUCKET_NAME: "taha-assignment-bucket-${{ github.run_id }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4   # Or whatever version you prefer

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-project

      - name: Terraform Plan
        run: terraform plan -var="instance_type=t2.micro" -var="key_name=EC2" -var="bucket_name=${{ env.BUCKET_NAME }}"
        working-directory: ./terraform-project

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="instance_type=t2.micro" -var="key_name=EC2" -var="bucket_name=${{ env.BUCKET_NAME }}"
        working-directory: ./terraform-project

      # Create S3 bucket dynamically using GitHub run_id
      #- name: Create S3 bucket
     #   run: |

    #      aws s3 mb s3://${{ env.BUCKET_NAME }} --region ${{ env.AWS_REGION }}
   #     env:
  #        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ env.AWS_REGION }}

      # Ensure Lambda ZIP exists by creating it if it's not already created
      - name: Zip Lambda function
        run: |
          mkdir -p lambda
          zip -r lambda/lambda_function.zip lambda/lambda_function.py  # Adjust if your Lambda code is in a different file
        working-directory: ./terraform-project  # Make sure the path is correct based on where lambda code is located

      # Upload Lambda ZIP to S3
      - name: Upload Lambda ZIP to S3
        run: |
          aws s3 cp lambda/lambda_function.zip s3://${{ env.BUCKET_NAME }}/lambda_function.zip
        env:
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        
      # Optional: Terraform Apply for Lambda Deployment
      - name: Terraform Apply for Lambda Deployment
        run: terraform apply -auto-approve -var="instance_type=t2.micro" -var="key_name=EC2" -var="bucket_name=${{ env.BUCKET_NAME }}" -var="lambda_zip_path=s3://${{ env.BUCKET_NAME }}/lambda_function.zip"
        working-directory: ./terraform-project
        continue-on-error: true

